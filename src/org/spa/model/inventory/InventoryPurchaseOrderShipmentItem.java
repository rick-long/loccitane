package org.spa.model.inventory;
// Generated 2016-5-9 12:05:26 by Hibernate Tools 4.3.1

import org.spa.model.product.ProductOption;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InventoryPurchaseOrderShipmentItem generated by hbm2java
 */
@Entity
@Table(name = "INVENTORY_PURCHASE_ORDER_SHIPMENT_ITEM", catalog = "loccitane")
public class InventoryPurchaseOrderShipmentItem implements java.io.Serializable {

    private Long id;
    private InventoryPurchaseOrderShipment inventoryPurchaseOrderShipment;
    private ProductOption productOption;
    private int qty;
    private boolean isActive;
    private Date created;
    private String createdBy;
    private Date lastUpdated;
    private String lastUpdatedBy;
    private Set<InventoryTransaction> inventoryTransactions = new HashSet<InventoryTransaction>(0);

    public InventoryPurchaseOrderShipmentItem() {
    }

    public InventoryPurchaseOrderShipmentItem(InventoryPurchaseOrderShipment inventoryPurchaseOrderShipment, ProductOption productOption, int qty, boolean isActive, Date created, String createdBy, Date lastUpdated, String lastUpdatedBy) {
        this.inventoryPurchaseOrderShipment = inventoryPurchaseOrderShipment;
        this.productOption = productOption;
        this.qty = qty;
        this.isActive = isActive;
        this.created = created;
        this.createdBy = createdBy;
        this.lastUpdated = lastUpdated;
        this.lastUpdatedBy = lastUpdatedBy;
    }

    public InventoryPurchaseOrderShipmentItem(InventoryPurchaseOrderShipment inventoryPurchaseOrderShipment, ProductOption productOption, int qty, boolean isActive, Date created, String createdBy, Date lastUpdated, String lastUpdatedBy, Set<InventoryTransaction> inventoryTransactions) {
        this.inventoryPurchaseOrderShipment = inventoryPurchaseOrderShipment;
        this.productOption = productOption;
        this.qty = qty;
        this.isActive = isActive;
        this.created = created;
        this.createdBy = createdBy;
        this.lastUpdated = lastUpdated;
        this.lastUpdatedBy = lastUpdatedBy;
        this.inventoryTransactions = inventoryTransactions;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "inventory_purchase_order_shipment_id", nullable = false)
    public InventoryPurchaseOrderShipment getInventoryPurchaseOrderShipment() {
        return this.inventoryPurchaseOrderShipment;
    }

    public void setInventoryPurchaseOrderShipment(InventoryPurchaseOrderShipment inventoryPurchaseOrderShipment) {
        this.inventoryPurchaseOrderShipment = inventoryPurchaseOrderShipment;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "product_option_id", nullable = false)
    public ProductOption getProductOption() {
        return this.productOption;
    }

    public void setProductOption(ProductOption productOption) {
        this.productOption = productOption;
    }

    @Column(name = "qty", nullable = false)
    public int getQty() {
        return this.qty;
    }

    public void setQty(int qty) {
        this.qty = qty;
    }

    @Column(name = "is_active", nullable = false)
    public boolean isIsActive() {
        return this.isActive;
    }

    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", nullable = false, length = 19)
    public Date getCreated() {
        return this.created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    @Column(name = "created_by", nullable = false, length = 100)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_updated", nullable = false, length = 19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }

    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    @Column(name = "last_updated_by", nullable = false, length = 100)
    public String getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public void setLastUpdatedBy(String lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "inventoryPurchaseOrderShipmentItem", cascade = CascadeType.ALL)
    public Set<InventoryTransaction> getInventoryTransactions() {
        return this.inventoryTransactions;
    }

    public void setInventoryTransactions(Set<InventoryTransaction> inventoryTransactions) {
        this.inventoryTransactions = inventoryTransactions;
    }

}
