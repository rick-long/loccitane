package org.spa.model.awardRedemption;
// Generated 2016-5-23 18:16:01 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.spa.model.prepaid.Prepaid;
import org.spa.model.product.ProductOption;
import org.spa.model.user.User;

/**
 * AwardRedemptionTransaction generated by hbm2java
 */
@Entity
@Table(name = "AWARD_REDEMPTION_TRANSACTION", catalog = "loccitane")
public class AwardRedemptionTransaction implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Integer id;
	private AwardRedemption awardRedemption;
	private Prepaid redeemPrepaid;
	private ProductOption redeemGoods;// this is for goods redeem
	private User redeemMember;
	private Date redeemDate;
	private double redeemLp;
	private double redeemAmount;
	private String redeemType;
	private boolean isActive;
	private Date created;
	private String createdBy;
	private Date lastUpdated;
	private String lastUpdatedBy;
	
	public AwardRedemptionTransaction() {
	}

	public AwardRedemptionTransaction(AwardRedemption awardRedemption, ProductOption redeemGoods, User redeemMember,
			Date redeemDate, double redeemLp, double redeemAmount, String redeemType, boolean isActive) {
		this.awardRedemption = awardRedemption;
		this.redeemGoods = redeemGoods;
		this.redeemMember = redeemMember;
		this.redeemDate = redeemDate;
		this.redeemLp = redeemLp;
		this.redeemAmount = redeemAmount;
		this.redeemType = redeemType;
		this.isActive = isActive;
	}

	public AwardRedemptionTransaction(AwardRedemption awardRedemption, Prepaid redeemPrepaid, ProductOption redeemGoods,
			User redeemMember, Date redeemDate, double redeemLp, double redeemAmount, String redeemType, boolean isActive,
			Date created, String createdBy, Date lastUpdated, String lastUpdatedBy) {
		this.awardRedemption = awardRedemption;
		this.redeemPrepaid = redeemPrepaid;
		this.redeemGoods = redeemGoods;
		this.redeemMember = redeemMember;
		this.redeemDate = redeemDate;
		this.redeemLp = redeemLp;
		this.redeemAmount = redeemAmount;
		this.redeemType = redeemType;
		this.isActive = isActive;
		this.created = created;
		this.createdBy = createdBy;
		this.lastUpdated = lastUpdated;
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "award_redemption_id", nullable = false)
	public AwardRedemption getAwardRedemption() {
		return this.awardRedemption;
	}

	public void setAwardRedemption(AwardRedemption awardRedemption) {
		this.awardRedemption = awardRedemption;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prepaid_id")
	public Prepaid getRedeemPrepaid() {
		return redeemPrepaid;
	}
	public void setRedeemPrepaid(Prepaid redeemPrepaid) {
		this.redeemPrepaid = redeemPrepaid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_option_id", nullable = false)
	public ProductOption getRedeemGoods() {
		return redeemGoods;
	}
	public void setRedeemGoods(ProductOption redeemGoods) {
		this.redeemGoods = redeemGoods;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "member_id", nullable = false)
	public User getRedeemMember() {
		return redeemMember;
	}
	public void setRedeemMember(User redeemMember) {
		this.redeemMember = redeemMember;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "redeem_date", length = 19)
	public Date getRedeemDate() {
		return this.redeemDate;
	}

	public void setRedeemDate(Date redeemDate) {
		this.redeemDate = redeemDate;
	}

	@Column(name = "redeem_lp", nullable = false, precision = 22, scale = 0)
	public double getRedeemLp() {
		return this.redeemLp;
	}

	public void setRedeemLp(double redeemLp) {
		this.redeemLp = redeemLp;
	}

	@Column(name = "redeem_amount", nullable = false, precision = 22, scale = 0)
	public double getRedeemAmount() {
		return this.redeemAmount;
	}

	public void setRedeemAmount(double redeemAmount) {
		this.redeemAmount = redeemAmount;
	}

	@Column(name = "redeem_type", nullable = false, length = 45)
	public String getRedeemType() {
		return this.redeemType;
	}

	public void setRedeemType(String redeemType) {
		this.redeemType = redeemType;
	}

	@Column(name = "is_active", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "created_by", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", length = 19)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "last_updated_by", length = 100)
	public String getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(String lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

}
