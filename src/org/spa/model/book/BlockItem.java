package org.spa.model.book;
// Generated 2016-8-10 17:41:38 by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.spa.constant.CommonConstant;

/**
 * BlockItem generated by hbm2java
 */
@Entity
@Table(name = "BLOCK_ITEM", catalog = "loccitane")
public class BlockItem implements java.io.Serializable {

    private Long id;
    private Block block;
    private Date startTime;
    private Date endTime;
    private double days;
    private String paidType;
    private boolean isActive;
    private Date created;
    private String createdBy;
    private Date lastUpdated;
    private String lastUpdatedBy;
    private String status;

    public BlockItem() {
    }

    public BlockItem(Block block, Date startTime, Date endTime, double days, String paidType, boolean isActive, Date created, String createdBy, Date lastUpdated, String lastUpdatedBy, String status) {
        this.block = block;
        this.startTime = startTime;
        this.endTime = endTime;
        this.days = days;
        this.paidType = paidType;
        this.isActive = isActive;
        this.created = created;
        this.createdBy = createdBy;
        this.lastUpdated = lastUpdated;
        this.lastUpdatedBy = lastUpdatedBy;
        this.status = status;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "block_id", nullable = false)
    public Block getBlock() {
        return this.block;
    }

    public void setBlock(Block block) {
        this.block = block;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_time", nullable = false, length = 19)
    public Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_time", nullable = false, length = 19)
    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    @Column(name = "days", nullable = false, precision = 22, scale = 0)
    public double getDays() {
        return this.days;
    }

    public void setDays(double days) {
        this.days = days;
    }

    @Column(name = "paid_type", nullable = false, length = 45)
    public String getPaidType() {
        return this.paidType;
    }

    public void setPaidType(String paidType) {
        this.paidType = paidType;
    }

    @Column(name = "is_active", nullable = false)
    public boolean isIsActive() {
        return this.isActive;
    }

    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", nullable = false, length = 19)
    public Date getCreated() {
        return this.created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    @Column(name = "created_by", nullable = false, length = 100)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_updated", nullable = false, length = 19)
    public Date getLastUpdated() {
        return this.lastUpdated;
    }

    public void setLastUpdated(Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }

    @Column(name = "last_updated_by", nullable = false, length = 100)
    public String getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    public void setLastUpdatedBy(String lastUpdatedBy) {
        this.lastUpdatedBy = lastUpdatedBy;
    }

    @Column(name = "status", nullable = false, length = 45)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Override
    public String toString() {
        return "BlockItem{" +
                "days=" + days +
                ", endTime=" + endTime +
                ", id=" + id +
                ", paidType='" + paidType + '\'' +
                ", startTime=" + startTime +
                '}';
    }

    /**
     * 判斷time是否被block
     *
     * @param time
     * @return
     */
    @Transient
    public boolean isTimeBlock(Date time) {
        return time.equals(getStartTime()) || (time.after(getStartTime()) && time.before(getEndTime()));
    }

    @Transient
    public boolean isCancel() {
        return CommonConstant.BLOCK_ITEM_STATUS_CANCEL.equals(getStatus());
    }
}
