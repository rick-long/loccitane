package org.spa.model.payment;
// Generated 2016-4-21 11:33:53 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.spa.model.company.Company;
import org.spa.model.order.PurchaseItem;
import org.spa.model.order.PurchaseOrder;
import org.spa.model.prepaid.PrepaidTopUpTransaction;

/**
 * Payment generated by hbm2java
 */
@Entity
@Table(name = "PAYMENT", catalog = "loccitane")
public class Payment implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private Company company;
	private PaymentMethod paymentMethod;
	private double amount;
	private String status;
	
	private PrepaidTopUpTransaction redeemPrepaidTopUpTransaction;//for redeem prepaid
	private PurchaseItem purchaseItem;//when redeem prepaid, will be set in item in same time
	
	private PurchaseOrder purchaseOrder;//buy prepaid and add sales will be set in order
	
	private boolean isActive;
	private Date created;
	private String createdBy;
	private Date lastUpdated;
	private String lastUpdatedBy;
	
	private Integer displayOrder;//付款方式的排序

    private String oldId;

    private String reference;//for paid by paypal
    private Double chargeAmount;
    
    
    @Column(name = "old_id", length = 45)
    public String getOldId() {
        return this.oldId;
    }

    public void setOldId(String oldId) {
        this.oldId = oldId;
    }

	public Payment() {
	}

	public Payment(Company company, PaymentMethod paymentMethod, PurchaseItem purchaseItem, PurchaseOrder purchaseOrder,
			double amount, String status, boolean isActive) {
		this.company = company;
		this.paymentMethod = paymentMethod;
		this.purchaseItem = purchaseItem;
		this.purchaseOrder = purchaseOrder;
		this.amount = amount;
		this.status = status;
		this.isActive = isActive;
	}

	public Payment(Company company, PaymentMethod paymentMethod,PurchaseItem purchaseItem,
			PurchaseOrder purchaseOrder, double amount, String status, boolean isActive, Date created, String createdBy,
			Date lastUpdated, String lastUpdatedBy,PrepaidTopUpTransaction prepaidTopUpTransaction,Integer displayOrder,String reference) {
		this.company = company;
		this.paymentMethod = paymentMethod;
		this.purchaseItem = purchaseItem;
		this.purchaseOrder = purchaseOrder;
		this.amount = amount;
		this.status = status;
		this.isActive = isActive;
		this.created = created;
		this.createdBy = createdBy;
		this.lastUpdated = lastUpdated;
		this.lastUpdatedBy = lastUpdatedBy;
		this.redeemPrepaidTopUpTransaction=prepaidTopUpTransaction;
		this.displayOrder=displayOrder;
		this.reference=reference;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "company_id", nullable = false)
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payment_method_id", nullable = false)
	public PaymentMethod getPaymentMethod() {
		return this.paymentMethod;
	}

	public void setPaymentMethod(PaymentMethod paymentMethod) {
		this.paymentMethod = paymentMethod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "purchase_item_id")
	public PurchaseItem getPurchaseItem() {
		return this.purchaseItem;
	}

	public void setPurchaseItem(PurchaseItem purchaseItem) {
		this.purchaseItem = purchaseItem;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "purchase_order_id", nullable = false)
	public PurchaseOrder getPurchaseOrder() {
		return this.purchaseOrder;
	}

	public void setPurchaseOrder(PurchaseOrder purchaseOrder) {
		this.purchaseOrder = purchaseOrder;
	}

	@Column(name = "amount", nullable = false, precision = 22, scale = 0)
	public double getAmount() {
		return this.amount;
	}

	public void setAmount(double amount) {
		this.amount = amount;
	}

	@Column(name = "status", nullable = false, length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}
	@Column(name = "reference", length = 100)
	public String getReference() {
		return reference;
	}
	public void setReference(String reference) {
		this.reference = reference;
	}
	
	@Column(name = "is_active", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "created_by", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", length = 19)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "last_updated_by", length = 100)
	public String getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(String lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prepaid_top_up_transaction_id")
	public PrepaidTopUpTransaction getRedeemPrepaidTopUpTransaction() {
		return redeemPrepaidTopUpTransaction;
	}
	public void setRedeemPrepaidTopUpTransaction(PrepaidTopUpTransaction redeemPrepaidTopUpTransaction) {
		this.redeemPrepaidTopUpTransaction = redeemPrepaidTopUpTransaction;
	}
	
	@Column(name = "display_order", nullable = false)
	public Integer getDisplayOrder() {
		return displayOrder;
	}
	public void setDisplayOrder(Integer displayOrder) {
		this.displayOrder = displayOrder;
	}
	@Column(name = "charge_amount", precision = 22, scale = 0)
	public Double getChargeAmount() {
		return chargeAmount;
	}
	public void setChargeAmount(Double chargeAmount) {
		this.chargeAmount = chargeAmount;
	}
}
