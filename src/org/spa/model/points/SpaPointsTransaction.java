package org.spa.model.points;
// Generated 2016-3-1 15:00:01 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.spa.model.order.PurchaseOrder;
import org.spa.model.user.User;

/**
 * SpaPointsTransaction generated by hbm2java
 */
@Entity
@Table(name = "SPA_POINTS_TRANSACTION", catalog = "loccitane")
public class SpaPointsTransaction implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private User user;
	private Date earnDate;
	private Date expiryDate;
	private Double earnPoints;
	private Double usedPoints;
	private String earnChannel;
	private boolean isActive;//用来升级，如果这条record的points完全用来升级，那么这条record的is active设置为false
	private Date created;
	private String createdBy;
	private Date lastUpdated;
	private String lastUpdatedBy;
	private PurchaseOrder purchaseOrder;
	private String remarks;

    private String oldId;

    @Column(name = "old_id", length = 45)
    public String getOldId() {
        return this.oldId;
    }

    public void setOldId(String oldId) {
        this.oldId = oldId;
    }

	public SpaPointsTransaction() {
	}

	public SpaPointsTransaction(User user, boolean isActive) {
		this.user = user;
		this.isActive = isActive;
	}

	public SpaPointsTransaction(User user, Date earnDate, Date expiryDate, Double earnPoints, Double usedPoints,
			String earnChannel, boolean isActive, Date created, String createdBy, Date lastUpdated,
			String lastUpdatedBy,PurchaseOrder purchaseOrder,String remarks) {
		this.user = user;
		this.earnDate = earnDate;
		this.expiryDate = expiryDate;
		this.earnPoints = earnPoints;
		this.usedPoints = usedPoints;
		this.earnChannel = earnChannel;
		this.isActive = isActive;
		this.created = created;
		this.createdBy = createdBy;
		this.lastUpdated = lastUpdated;
		this.lastUpdatedBy = lastUpdatedBy;
		this.purchaseOrder=purchaseOrder;
		this.remarks=remarks;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "earn_date", length = 19)
	public Date getEarnDate() {
		return this.earnDate;
	}

	public void setEarnDate(Date earnDate) {
		this.earnDate = earnDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "expiry_date", length = 19)
	public Date getExpiryDate() {
		return this.expiryDate;
	}

	public void setExpiryDate(Date expiryDate) {
		this.expiryDate = expiryDate;
	}

	@Column(name = "earn_points", nullable=false,precision = 22, scale = 0)
	public Double getEarnPoints() {
		return this.earnPoints;
	}

	public void setEarnPoints(Double earnPoints) {
		this.earnPoints = earnPoints;
	}

	@Column(name = "used_points", nullable=false,precision = 22, scale = 0)
	public Double getUsedPoints() {
		return this.usedPoints;
	}

	public void setUsedPoints(Double usedPoints) {
		this.usedPoints = usedPoints;
	}

	@Column(name = "earn_channel", length = 45)
	public String getEarnChannel() {
		return this.earnChannel;
	}

	public void setEarnChannel(String earnChannel) {
		this.earnChannel = earnChannel;
	}

	@Column(name = "is_active", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "created_by", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", length = 19)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "last_updated_by", length = 100)
	public String getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(String lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "purchase_order_id")
	public PurchaseOrder getPurchaseOrder() {
		return this.purchaseOrder;
	}

	public void setPurchaseOrder(PurchaseOrder purchaseOrder) {
		this.purchaseOrder = purchaseOrder;
	}
	
	@Column(name = "remarks", length = 255)
	public String getRemarks() {
		return remarks;
	}
	
	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}
}
