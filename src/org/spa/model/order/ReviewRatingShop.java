package org.spa.model.order;
// Generated 2018-1-18 15:50:45 by Hibernate Tools 4.3.1.Final

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.spa.model.shop.Shop;
import org.spa.model.user.User;

import javax.persistence.*;
import java.util.Date;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Coment generated by hbm2java
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "REVIEW_RATING_SHOP", catalog = "loccitane")
public class ReviewRatingShop implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private Review review;
	private Shop shop;
	private Integer customerServiceStar;
	private Integer cleanlinessStar;
	private boolean isActive;
	private Date created;
	private String createdBy;
	private Date lastUpdated;
	private String lastUpdatedBy;
	public ReviewRatingShop() {
	}
	public ReviewRatingShop(boolean isActive) {
		this.isActive = isActive;
	}

	public ReviewRatingShop(long id,Review review, Shop shop, Integer customerServiceStar, Integer cleanlinessStar, boolean isActive, Date created, String createdBy,
                            Date lastUpdated, String lastUpdatedBy) {
		this.id=id;
		this.review = review;
		this.shop = shop;
		this.customerServiceStar = customerServiceStar;
		this.cleanlinessStar=cleanlinessStar;
		this.isActive = isActive;
		this.created = created;
		this.createdBy = createdBy;
		this.lastUpdated = lastUpdated;
		this.lastUpdatedBy = lastUpdatedBy;
	}
	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "review_id",nullable = false)
	public Review getReview() {
		return this.review;
	}

	public void setReview(Review review) {
		this.review = review;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "shop_id",nullable = false)
	public Shop getShop() {
		return this.shop;
	}

	public void setShop(Shop shop) {
		this.shop = shop;
	}

	@Column(name = "customer_service_star", nullable = false)
	public Integer getCustomerServiceStar() {
		return this.customerServiceStar;
	}

	public void setCustomerServiceStar(Integer customerServiceStar) {
		this.customerServiceStar = customerServiceStar;
	}

	@Column(name = "cleanliness_star",nullable = false)
	public Integer getCleanlinessStar() {
		return this.cleanlinessStar;
	}

	public void setCleanlinessStar(Integer cleanlinessStar) {
		this.cleanlinessStar = cleanlinessStar;
	}

	@Column(name = "is_active", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "created_by", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", length = 19)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "last_updated_by", length = 100)
	public String getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(String lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

}
