package org.spa.model.order;
// Generated 2018-1-18 15:50:45 by Hibernate Tools 4.3.1.Final

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.spa.model.user.User;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Coment generated by hbm2java
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "REVIEW", catalog = "loccitane")
public class Review implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private PurchaseOrder purchaseOrder;
	private User user;
	private String reviewText;
	private boolean isActive;
	private Date created;
	private String createdBy;
	private Date lastUpdated;
	private String lastUpdatedBy;
	private Set<ReviewRatingShop> reviewRatingShops = new HashSet<>(0);
	private Set<ReviewRatingTreatment> reviewRatingTreatments = new HashSet<>(0);

	private Integer nps;
	public Review() {
	}
	public Review(boolean isActive) {
		this.isActive = isActive;
	}

	public Review(long id,PurchaseOrder purchaseOrder,User user, String reviewText, boolean isActive, Date created, String createdBy,
                  Date lastUpdated, String lastUpdatedBy,Integer nps ) {
		this.id=id;
		this.purchaseOrder = purchaseOrder;
		this.user=user;
		this.reviewText = reviewText;
		this.isActive = isActive;
		this.created = created;
		this.createdBy = createdBy;
		this.lastUpdated = lastUpdated;
		this.lastUpdatedBy = lastUpdatedBy;
		this.nps=nps;
/*		this.reviewRatingShops=reviewRatingShops;*/
/*		this.reviewRatingTreatments=reviewRatingTreatments;*/
	}
	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_id",nullable = false)
	public PurchaseOrder getPurchaseOrder() {
		return this.purchaseOrder;
	}

	public void setPurchaseOrder(PurchaseOrder purchaseOrder) {
		this.purchaseOrder = purchaseOrder;
	}@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id",nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "review_text", length =200 )
	public String getReviewText() {
		return this.reviewText;
	}

	public void setReviewText(String reviewText) {
		this.reviewText = reviewText;
	}

	@Column(name = "is_active", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "created_by", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", length = 19)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "last_updated_by", length = 100)
	public String getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(String lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "review", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<ReviewRatingShop> getReviewRatingShops() {
		return reviewRatingShops;
	}
	public void setReviewRatingShops(Set<ReviewRatingShop> reviewRatingShops) {
		this.reviewRatingShops = reviewRatingShops;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "review", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<ReviewRatingTreatment> getReviewRatingTreatments() {
		return reviewRatingTreatments;
	}
	public void setReviewRatingTreatments(Set<ReviewRatingTreatment> reviewRatingTreatments) {
		this.reviewRatingTreatments = reviewRatingTreatments;
	}
	@Column(name = "nps", nullable = false)
	public Integer getNps() {
		return nps;
	}

	public void setNps(Integer nps) {
		this.nps = nps;
	}
}
